datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  // previewFeatures = []
}

generator dbml {
  provider = "prisma-dbml-generator"
}

enum Role {
  ADMIN
  USER
}

enum SliceState {
  //未切图或切图失败
  PENDING
  //切图中
  SLICING
  //切图并保存成功
  SUCCESS
}

enum ScenicSpotType {
  SHOP
  FOOD
  TOILET
  PARK
  SERVICE_CENTER
  SPOT
  HOTEL
}

enum Language {
  CHINESE
  ENGLISH
  JAPANESE
  KOREAN
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique
  password  String
  name      String
  role      Role
}

model ScenicRegion {
  id                      String     @id @default(cuid())
  createdAt               DateTime   @default(now())
  updatedAt               DateTime   @updatedAt
  name                    String
  latitude                Float
  longitude               Float
  handDrawingUri          String
  handDrawingNE           String
  handDrawingSW           String
  vrUrl                   String
  ticketUrl               String
  zoom                    Int
  minZoom                 Int
  maxZoom                 Int
  title                   String
  layer                   String
  layersDisplayName       String
  enableNavigation        Boolean
  enablePoiLanguageSwitch Boolean
  lang                    Language
  sliceState              SliceState @default(PENDING)

  scenicSpots   ScenicSpot[]
  touringRoutes TouringRoute[]
}

model ScenicSpot {
  id             String       @id @default(cuid())
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  scenicRegionId String
  scenicRegion   ScenicRegion @relation(fields: [scenicRegionId], references: [id])

  name         String
  type         ScenicSpotType
  audioUri     String
  imageUri     String
  introduction String
  lang         Language
  iconUri      String
  hidden       Boolean
}

model TouringRoute {
  id             String       @id @default(cuid())
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  scenicRegionId String
  scenicRegion   ScenicRegion @relation(fields: [scenicRegionId], references: [id])

  name    String
  content String
  lang    Language
  realNav Boolean
}
